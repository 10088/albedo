{"remainingRequest":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\albedo\\albedo-ui\\src\\views\\sys\\log-login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\src\\views\\sys\\log-login\\index.vue","mtime":1566121468288},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters} from \"vuex\";\nimport util from \"@/util/util\";\nimport CrudSelect from \"@/components/avue/crud-select\";\nimport CrudCheckbox from \"@/components/avue/crud-checkbox\";\nimport CrudRadio from \"@/components/avue/crud-radio\";\nimport logLoginService from \"./log-login-service\";\n\nexport default {\n    name: \"table_sys_logLogin\",\n    components: {CrudSelect, CrudCheckbox, CrudRadio},\n    data() {\n        return {\n            searchFilterVisible: true,\n            list: null,\n            total: null,\n            listLoading: true,\n            searchLogLoginForm: {},\n            listQuery: {\n                page: 1,\n                size: 20\n            },\n            statusOptions: undefined,\n            delFlagOptions: undefined,\n            dialogStatus: 'create',\n            textMap: {\n                update: '编辑登录日志',\n                create: '创建登录日志'\n            },\n            tableKey: 0\n        };\n    },\n    computed: {\n        ...mapGetters([\"permissions\", \"dicts\"])\n    },\n    filters: {},\n    created() {\n        this.getList();\n        this.sys_logLogin_edit = this.permissions[\"sys_logLogin_edit\"];\n        this.sys_logLogin_del = this.permissions[\"sys_logLogin_del\"];\n        this.statusOptions = this.dicts[\"sys_status\"];\n        this.delFlagOptions = this.dicts[\"sys_flag\"];\n    },\n    methods: {\n        getList() {\n            this.listLoading = true;\n            this.listQuery.queryConditionJson = util.parseJsonItemForm([\n                {\n                    fieldName: 'loginName',\n                    value: this.searchLogLoginForm.loginName,\n                    operate: 'like',\n                    attrType: 'String'\n                },\n                {\n                    fieldName: 'loginLocation',\n                    value: this.searchLogLoginForm.loginLocation,\n                    operate: 'like',\n                    attrType: 'String'\n                },\n            ]);\n            logLoginService.page(this.listQuery).then(response => {\n                this.list = response.data.records;\n                this.total = response.data.total;\n                this.listLoading = false;\n            });\n        },\n        sortChange(column) {\n            if (column.order == \"ascending\") {\n                this.listQuery.ascs = column.prop;\n                this.listQuery.descs = undefined;\n            } else {\n                this.listQuery.descs = column.prop;\n                this.listQuery.ascs = undefined;\n            }\n            this.getList()\n        },\n        searchReset() {\n            this.$refs['searchLogLoginForm'].resetFields();\n        },\n        handleFilter() {\n            this.listQuery.page = 1;\n            this.getList();\n        },\n        handleSizeChange(val) {\n            this.listQuery.size = val;\n            this.getList();\n        },\n        handleCurrentChange(val) {\n            this.listQuery.page = val;\n            this.getList();\n        },\n        handleDelete(row) {\n            this.$confirm(\n                \"此操作将永久删除该登录日志, 是否继续?\",\n                \"提示\",\n                {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }\n            ).then(() => {\n                logLoginService.remove(row.id).then((data) => {\n                    this.getList();\n                });\n            });\n        },\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/views/sys/log-login","sourcesContent":["<template>\n  <div class=\"app-container calendar-list-container\">\n    <basic-container>\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\" :model=\"searchLogLoginForm\" ref=\"searchLogLoginForm\" v-show=\"searchFilterVisible\">\n          <el-form-item label=\"登录账号\" prop=\"loginName\">\n            <el-input class=\"filter-item input-normal\" v-model=\"searchLogLoginForm.loginName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"登录地点\" prop=\"loginLocation\">\n            <el-input class=\"filter-item input-normal\" v-model=\"searchLogLoginForm.loginLocation\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button @click=\"handleFilter\" icon=\"el-icon-search\" size=\"small\" type=\"primary\">查询</el-button>\n            <el-button @click=\"searchReset\" icon=\"icon-rest\" size=\"small\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 表格功能列 -->\n      <div class=\"table-menu\">\n        <div class=\"table-menu-left\">\n          <el-button-group>\n            <el-button @click=\"handleEdit\" class=\"filter-item\" icon=\"edit\" size=\"mini\" type=\"primary\"\n                       v-if=\"sys_logLogin_edit\">添加\n            </el-button>\n          </el-button-group>\n        </div>\n        <div class=\"table-menu-right\">\n          <el-button @click=\"searchFilterVisible= !searchFilterVisible\" circle icon=\"el-icon-search\"\n                     size=\"mini\"></el-button>\n        </div>\n      </div>\n      <el-table :data=\"list\" :key='tableKey' @sort-change=\"sortChange\" element-loading-text=\"加载中...\"\n                fit highlight-current-row v-loading=\"listLoading\">\n        <el-table-column align=\"center\" label=\"登录账号\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.loginName}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"登录IP地址\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.ipAddress}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"登录地点\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.loginLocation}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"用户代理\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.userAgent}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"浏览器类型\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.browser}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"操作系统\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.os}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"登录状态\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.status}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"提示消息\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.message}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"访问时间\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.loginTime}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" fixed=\"right\" label=\"操作\" v-if=\"sys_logLogin_del\">\n          <template slot-scope=\"scope\">\n            <el-button @click=\"handleDelete(scope.row)\" icon=\"icon-delete\" title=\"删除\" type=\"text\"\n                       v-if=\"sys_logLogin_del\">\n            </el-button>\n          </template>\n        </el-table-column>\n\n      </el-table>\n\n      <div class=\"pagination-container\" v-show=\"!listLoading\">\n        <el-pagination :current-page.sync=\"listQuery.page\" :page-size=\"listQuery.size\"\n                       :page-sizes=\"[10,20,30, 50]\" :total=\"total\" @current-change=\"handleCurrentChange\"\n                       @size-change=\"handleSizeChange\" layout=\"total, sizes, prev, pager, next, jumper\">\n        </el-pagination>\n      </div>\n    </basic-container>\n  </div>\n</template>\n\n<script>\n    import {mapGetters} from \"vuex\";\n    import util from \"@/util/util\";\n    import CrudSelect from \"@/components/avue/crud-select\";\n    import CrudCheckbox from \"@/components/avue/crud-checkbox\";\n    import CrudRadio from \"@/components/avue/crud-radio\";\n    import logLoginService from \"./log-login-service\";\n\n    export default {\n        name: \"table_sys_logLogin\",\n        components: {CrudSelect, CrudCheckbox, CrudRadio},\n        data() {\n            return {\n                searchFilterVisible: true,\n                list: null,\n                total: null,\n                listLoading: true,\n                searchLogLoginForm: {},\n                listQuery: {\n                    page: 1,\n                    size: 20\n                },\n                statusOptions: undefined,\n                delFlagOptions: undefined,\n                dialogStatus: 'create',\n                textMap: {\n                    update: '编辑登录日志',\n                    create: '创建登录日志'\n                },\n                tableKey: 0\n            };\n        },\n        computed: {\n            ...mapGetters([\"permissions\", \"dicts\"])\n        },\n        filters: {},\n        created() {\n            this.getList();\n            this.sys_logLogin_edit = this.permissions[\"sys_logLogin_edit\"];\n            this.sys_logLogin_del = this.permissions[\"sys_logLogin_del\"];\n            this.statusOptions = this.dicts[\"sys_status\"];\n            this.delFlagOptions = this.dicts[\"sys_flag\"];\n        },\n        methods: {\n            getList() {\n                this.listLoading = true;\n                this.listQuery.queryConditionJson = util.parseJsonItemForm([\n                    {\n                        fieldName: 'loginName',\n                        value: this.searchLogLoginForm.loginName,\n                        operate: 'like',\n                        attrType: 'String'\n                    },\n                    {\n                        fieldName: 'loginLocation',\n                        value: this.searchLogLoginForm.loginLocation,\n                        operate: 'like',\n                        attrType: 'String'\n                    },\n                ]);\n                logLoginService.page(this.listQuery).then(response => {\n                    this.list = response.data.records;\n                    this.total = response.data.total;\n                    this.listLoading = false;\n                });\n            },\n            sortChange(column) {\n                if (column.order == \"ascending\") {\n                    this.listQuery.ascs = column.prop;\n                    this.listQuery.descs = undefined;\n                } else {\n                    this.listQuery.descs = column.prop;\n                    this.listQuery.ascs = undefined;\n                }\n                this.getList()\n            },\n            searchReset() {\n                this.$refs['searchLogLoginForm'].resetFields();\n            },\n            handleFilter() {\n                this.listQuery.page = 1;\n                this.getList();\n            },\n            handleSizeChange(val) {\n                this.listQuery.size = val;\n                this.getList();\n            },\n            handleCurrentChange(val) {\n                this.listQuery.page = val;\n                this.getList();\n            },\n            handleDelete(row) {\n                this.$confirm(\n                    \"此操作将永久删除该登录日志, 是否继续?\",\n                    \"提示\",\n                    {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }\n                ).then(() => {\n                    logLoginService.remove(row.id).then((data) => {\n                        this.getList();\n                    });\n                });\n            },\n        }\n    };\n</script>\n"]}]}