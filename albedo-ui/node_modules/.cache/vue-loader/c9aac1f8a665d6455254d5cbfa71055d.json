{"remainingRequest":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\albedo\\albedo-ui\\src\\views\\quartz\\job-log\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\src\\views\\quartz\\job-log\\index.vue","mtime":1566121468335},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters} from \"vuex\";\nimport util from \"@/util/util\";\nimport CrudSelect from \"@/components/avue/crud-select\";\nimport CrudCheckbox from \"@/components/avue/crud-checkbox\";\nimport CrudRadio from \"@/components/avue/crud-radio\";\nimport {baseUrl} from \"../../../config/env\";\nimport jobLogService from \"../job/job-log-service\";\n\nexport default {\n    name: \"table_quartz_jobLog\",\n    components: {CrudSelect, CrudCheckbox, CrudRadio},\n    data() {\n        return {\n            searchJobLogFilterVisible: true,\n            listJobLog: null,\n            totalJobLog: null,\n            listJobLogLoading: true,\n            searchJobLogForm: {},\n            listJobLogQuery: {\n                page: 1,\n                size: 20\n            },\n            tableKeyJobLog: 1\n        };\n    },\n    computed: {\n        ...mapGetters([\"permissions\", \"dicts\"])\n    },\n    filters: {},\n    created() {\n        this.getListJobLog();\n        this.quartz_jobLog_export = this.permissions[\"quartz_jobLog_export\"];\n        this.quartz_jobLog_clean = this.permissions[\"quartz_jobLog_clean\"];\n        this.quartz_jobLog_del = this.permissions[\"quartz_jobLog_del\"];\n        this.statusOptions = this.dicts[\"sys_status\"];\n    },\n    methods: {\n        getListJobLog() {\n            this.listJobLogLoading = true;\n            this.listJobLogQuery.queryConditionJson = util.parseJsonItemForm([\n                {fieldName: 'jobName', value: this.searchJobLogForm.jobName, operate: 'like', attrType: 'String'},\n                {fieldName: 'jobGroup', value: this.searchJobLogForm.jobGroup, operate: 'like', attrType: 'String'},\n                {fieldName: 'status', value: this.searchJobLogForm.status, operate: 'eq', attrType: 'String'},\n            ]);\n            jobLogService.page(this.listJobLogQuery).then(response => {\n                this.listJobLog = response.data.records;\n                this.totalJobLog = response.data.total;\n                this.listJobLogLoading = false;\n            });\n        },\n        sortChangeJobLog(column) {\n            if (column.order == \"ascending\") {\n                this.listJobLogQuery.ascs = column.prop;\n                this.listJobLogQuery.descs = undefined;\n            } else {\n                this.listJobLogQuery.descs = column.prop;\n                this.listJobLogQuery.ascs = undefined;\n            }\n            this.getListJobLog()\n        },\n        searchResetJobLog() {\n            this.$refs['searchJobLogForm'].resetFields();\n        },\n        handleJobLogFilter() {\n            this.listJobLogQuery.page = 1;\n            this.getListJobLog();\n        },\n        handleJobLogSizeChange(val) {\n            this.listJobLogQuery.size = val;\n            this.getListJobLog();\n        },\n        handleJobLogCurrentChange(val) {\n            this.listJobLogQuery.page = val;\n            this.getListJobLog();\n        },\n        handleJobLogDelete(row) {\n            this.$confirm(\n                \"此操作将永久删除该任务调度日志, 是否继续?\",\n                \"提示\",\n                {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }\n            ).then(() => {\n                jobLogService.remove(row.id).then((data) => {\n                    this.getListJobLog();\n                });\n            });\n        },\n        handleJobLogClean(row) {\n            this.$confirm('确定要此操作吗?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                jobLogService.clean(row.id).then((rs) => {\n                    this.getListJobLog();\n                })\n            })\n        },\n        handleJobLogExport() {\n            jobLogService.export(this.listJobLogQuery).then(response => {\n                window.location.href = `${window.location.origin}` + baseUrl + \"/file/download?fileName=\" + encodeURI(response.data) + \"&delete=\" + true;\n            });\n        }\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/quartz/job-log","sourcesContent":["<template>\n  <div class=\"app-container calendar-listJobLog-container\">\n    <basic-container>\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\" :model=\"searchJobLogForm\" ref=\"searchJobLogForm\" v-show=\"searchJobLogFilterVisible\">\n          <el-form-item label=\"任务名称\" prop=\"jobName\">\n            <el-input class=\"filter-item input-normal\" v-model=\"searchJobLogForm.jobName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"任务组名\" prop=\"jobGroup\">\n            <el-input class=\"filter-item input-normal\" v-model=\"searchJobLogForm.jobGroup\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"执行状态\" prop=\"status\">\n            <CrudRadio :dic=\"statusOptions\" v-model=\"searchJobLogForm.status\"></CrudRadio>\n          </el-form-item>\n          <el-form-item>\n            <el-button @click=\"handleJobLogFilter\" icon=\"el-icon-search\" size=\"small\" type=\"primary\">查询</el-button>\n            <el-button @click=\"searchResetJobLog\" icon=\"icon-rest\" size=\"small\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      <!-- 表格功能列 -->\n      <div class=\"table-menu\">\n        <div class=\"table-menu-left\">\n          <el-button-group>\n            <el-button @click=\"handleJobLogClean\" icon=\"icon-export\" size=\"mini\" type=\"primary\"\n                       v-if=\"quartz_jobLog_clean\">清空\n            </el-button>\n            <el-button @click=\"handleJobLogExport\" icon=\"icon-export\" size=\"mini\" type=\"primary\"\n                       v-if=\"quartz_jobLog_export\">导出\n            </el-button>\n          </el-button-group>\n        </div>\n        <div class=\"table-menu-right\">\n          <el-button @click=\"searchJobLogFilterVisible= !searchJobLogFilterVisible\" circle icon=\"el-icon-search\"\n                     size=\"mini\"></el-button>\n        </div>\n      </div>\n      <el-table :data=\"listJobLog\" :key='tableKeyJobLog' @sort-change=\"sortChangeJobLog\" element-loading-text=\"加载中...\"\n                fit highlight-current-row v-loading=\"listJobLogLoading\">\n        <el-table-column align=\"center\" label=\"任务名称\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.jobName}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"任务组名\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.jobGroup}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"调用目标字符串\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.invokeTarget}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"执行状态\">\n          <template slot-scope=\"scope\">\n            <el-tag>{{scope.row.statusText}}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"开始时间\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.startTime}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"结束时间\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.endTime}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"创建时间\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.createTime}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"日志信息\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.jobMessage}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"异常信息\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.exceptionInfo}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" fixed=\"right\" label=\"操作\" v-if=\"quartz_jobLog_del\">\n          <template slot-scope=\"scope\">\n            <el-button @click=\"handleJobLogDelete(scope.row)\" icon=\"icon-delete\" title=\"删除\" type=\"text\"\n                       v-if=\"quartz_jobLog_del\">\n            </el-button>\n          </template>\n        </el-table-column>\n\n      </el-table>\n      <div class=\"pagination-container\" v-show=\"!listJobLogLoading\">\n        <el-pagination :current-page.sync=\"listJobLogQuery.current\" :page-size=\"listJobLogQuery.size\"\n                       :page-sizes=\"[10,20,30, 50]\"\n                       :total=\"totalJobLog\" @current-change=\"handleJobLogCurrentChange\"\n                       @size-change=\"handleJobLogSizeChange\" background\n                       class=\"pull-right\" layout=\"total, sizes, prev, pager, next, jumper\">\n        </el-pagination>\n      </div>\n    </basic-container>\n  </div>\n</template>\n\n<script>\n    import {mapGetters} from \"vuex\";\n    import util from \"@/util/util\";\n    import CrudSelect from \"@/components/avue/crud-select\";\n    import CrudCheckbox from \"@/components/avue/crud-checkbox\";\n    import CrudRadio from \"@/components/avue/crud-radio\";\n    import {baseUrl} from \"../../../config/env\";\n    import jobLogService from \"../job/job-log-service\";\n\n    export default {\n        name: \"table_quartz_jobLog\",\n        components: {CrudSelect, CrudCheckbox, CrudRadio},\n        data() {\n            return {\n                searchJobLogFilterVisible: true,\n                listJobLog: null,\n                totalJobLog: null,\n                listJobLogLoading: true,\n                searchJobLogForm: {},\n                listJobLogQuery: {\n                    page: 1,\n                    size: 20\n                },\n                tableKeyJobLog: 1\n            };\n        },\n        computed: {\n            ...mapGetters([\"permissions\", \"dicts\"])\n        },\n        filters: {},\n        created() {\n            this.getListJobLog();\n            this.quartz_jobLog_export = this.permissions[\"quartz_jobLog_export\"];\n            this.quartz_jobLog_clean = this.permissions[\"quartz_jobLog_clean\"];\n            this.quartz_jobLog_del = this.permissions[\"quartz_jobLog_del\"];\n            this.statusOptions = this.dicts[\"sys_status\"];\n        },\n        methods: {\n            getListJobLog() {\n                this.listJobLogLoading = true;\n                this.listJobLogQuery.queryConditionJson = util.parseJsonItemForm([\n                    {fieldName: 'jobName', value: this.searchJobLogForm.jobName, operate: 'like', attrType: 'String'},\n                    {fieldName: 'jobGroup', value: this.searchJobLogForm.jobGroup, operate: 'like', attrType: 'String'},\n                    {fieldName: 'status', value: this.searchJobLogForm.status, operate: 'eq', attrType: 'String'},\n                ]);\n                jobLogService.page(this.listJobLogQuery).then(response => {\n                    this.listJobLog = response.data.records;\n                    this.totalJobLog = response.data.total;\n                    this.listJobLogLoading = false;\n                });\n            },\n            sortChangeJobLog(column) {\n                if (column.order == \"ascending\") {\n                    this.listJobLogQuery.ascs = column.prop;\n                    this.listJobLogQuery.descs = undefined;\n                } else {\n                    this.listJobLogQuery.descs = column.prop;\n                    this.listJobLogQuery.ascs = undefined;\n                }\n                this.getListJobLog()\n            },\n            searchResetJobLog() {\n                this.$refs['searchJobLogForm'].resetFields();\n            },\n            handleJobLogFilter() {\n                this.listJobLogQuery.page = 1;\n                this.getListJobLog();\n            },\n            handleJobLogSizeChange(val) {\n                this.listJobLogQuery.size = val;\n                this.getListJobLog();\n            },\n            handleJobLogCurrentChange(val) {\n                this.listJobLogQuery.page = val;\n                this.getListJobLog();\n            },\n            handleJobLogDelete(row) {\n                this.$confirm(\n                    \"此操作将永久删除该任务调度日志, 是否继续?\",\n                    \"提示\",\n                    {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }\n                ).then(() => {\n                    jobLogService.remove(row.id).then((data) => {\n                        this.getListJobLog();\n                    });\n                });\n            },\n            handleJobLogClean(row) {\n                this.$confirm('确定要此操作吗?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    jobLogService.clean(row.id).then((rs) => {\n                        this.getListJobLog();\n                    })\n                })\n            },\n            handleJobLogExport() {\n                jobLogService.export(this.listJobLogQuery).then(response => {\n                    window.location.href = `${window.location.origin}` + baseUrl + \"/file/download?fileName=\" + encodeURI(response.data) + \"&delete=\" + true;\n                });\n            }\n        }\n    };\n</script>\n"]}]}