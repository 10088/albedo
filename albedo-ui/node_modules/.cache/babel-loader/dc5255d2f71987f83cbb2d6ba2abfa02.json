{"remainingRequest":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IdeaProjects\\albedo\\albedo-ui\\src\\views\\sys\\log-login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\src\\views\\sys\\log-login\\index.vue","mtime":1566121468288},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IdeaProjects\\albedo\\albedo-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\IdeaProjects\\\\albedo\\\\albedo-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport util from \"@/util/util\";\nimport CrudSelect from \"@/components/avue/crud-select\";\nimport CrudCheckbox from \"@/components/avue/crud-checkbox\";\nimport CrudRadio from \"@/components/avue/crud-radio\";\nimport logLoginService from \"./log-login-service\";\nexport default {\n  name: \"table_sys_logLogin\",\n  components: {\n    CrudSelect: CrudSelect,\n    CrudCheckbox: CrudCheckbox,\n    CrudRadio: CrudRadio\n  },\n  data: function data() {\n    return {\n      searchFilterVisible: true,\n      list: null,\n      total: null,\n      listLoading: true,\n      searchLogLoginForm: {},\n      listQuery: {\n        page: 1,\n        size: 20\n      },\n      statusOptions: undefined,\n      delFlagOptions: undefined,\n      dialogStatus: 'create',\n      textMap: {\n        update: '编辑登录日志',\n        create: '创建登录日志'\n      },\n      tableKey: 0\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"permissions\", \"dicts\"])),\n  filters: {},\n  created: function created() {\n    this.getList();\n    this.sys_logLogin_edit = this.permissions[\"sys_logLogin_edit\"];\n    this.sys_logLogin_del = this.permissions[\"sys_logLogin_del\"];\n    this.statusOptions = this.dicts[\"sys_status\"];\n    this.delFlagOptions = this.dicts[\"sys_flag\"];\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      this.listQuery.queryConditionJson = util.parseJsonItemForm([{\n        fieldName: 'loginName',\n        value: this.searchLogLoginForm.loginName,\n        operate: 'like',\n        attrType: 'String'\n      }, {\n        fieldName: 'loginLocation',\n        value: this.searchLogLoginForm.loginLocation,\n        operate: 'like',\n        attrType: 'String'\n      }]);\n      logLoginService.page(this.listQuery).then(function (response) {\n        _this.list = response.data.records;\n        _this.total = response.data.total;\n        _this.listLoading = false;\n      });\n    },\n    sortChange: function sortChange(column) {\n      if (column.order == \"ascending\") {\n        this.listQuery.ascs = column.prop;\n        this.listQuery.descs = undefined;\n      } else {\n        this.listQuery.descs = column.prop;\n        this.listQuery.ascs = undefined;\n      }\n\n      this.getList();\n    },\n    searchReset: function searchReset() {\n      this.$refs['searchLogLoginForm'].resetFields();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.size = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.page = val;\n      this.getList();\n    },\n    handleDelete: function handleDelete(row) {\n      var _this2 = this;\n\n      this.$confirm(\"此操作将永久删除该登录日志, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        logLoginService.remove(row.id).then(function (data) {\n          _this2.getList();\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container calendar-list-container\">\n    <basic-container>\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\" :model=\"searchLogLoginForm\" ref=\"searchLogLoginForm\" v-show=\"searchFilterVisible\">\n          <el-form-item label=\"登录账号\" prop=\"loginName\">\n            <el-input class=\"filter-item input-normal\" v-model=\"searchLogLoginForm.loginName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"登录地点\" prop=\"loginLocation\">\n            <el-input class=\"filter-item input-normal\" v-model=\"searchLogLoginForm.loginLocation\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button @click=\"handleFilter\" icon=\"el-icon-search\" size=\"small\" type=\"primary\">查询</el-button>\n            <el-button @click=\"searchReset\" icon=\"icon-rest\" size=\"small\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <!-- 表格功能列 -->\n      <div class=\"table-menu\">\n        <div class=\"table-menu-left\">\n          <el-button-group>\n            <el-button @click=\"handleEdit\" class=\"filter-item\" icon=\"edit\" size=\"mini\" type=\"primary\"\n                       v-if=\"sys_logLogin_edit\">添加\n            </el-button>\n          </el-button-group>\n        </div>\n        <div class=\"table-menu-right\">\n          <el-button @click=\"searchFilterVisible= !searchFilterVisible\" circle icon=\"el-icon-search\"\n                     size=\"mini\"></el-button>\n        </div>\n      </div>\n      <el-table :data=\"list\" :key='tableKey' @sort-change=\"sortChange\" element-loading-text=\"加载中...\"\n                fit highlight-current-row v-loading=\"listLoading\">\n        <el-table-column align=\"center\" label=\"登录账号\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.loginName}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"登录IP地址\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.ipAddress}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"登录地点\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.loginLocation}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"用户代理\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.userAgent}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"浏览器类型\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.browser}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"操作系统\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.os}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"登录状态\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.status}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"提示消息\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.message}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"访问时间\">\n          <template slot-scope=\"scope\">\n            <span>{{scope.row.loginTime}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" fixed=\"right\" label=\"操作\" v-if=\"sys_logLogin_del\">\n          <template slot-scope=\"scope\">\n            <el-button @click=\"handleDelete(scope.row)\" icon=\"icon-delete\" title=\"删除\" type=\"text\"\n                       v-if=\"sys_logLogin_del\">\n            </el-button>\n          </template>\n        </el-table-column>\n\n      </el-table>\n\n      <div class=\"pagination-container\" v-show=\"!listLoading\">\n        <el-pagination :current-page.sync=\"listQuery.page\" :page-size=\"listQuery.size\"\n                       :page-sizes=\"[10,20,30, 50]\" :total=\"total\" @current-change=\"handleCurrentChange\"\n                       @size-change=\"handleSizeChange\" layout=\"total, sizes, prev, pager, next, jumper\">\n        </el-pagination>\n      </div>\n    </basic-container>\n  </div>\n</template>\n\n<script>\n    import {mapGetters} from \"vuex\";\n    import util from \"@/util/util\";\n    import CrudSelect from \"@/components/avue/crud-select\";\n    import CrudCheckbox from \"@/components/avue/crud-checkbox\";\n    import CrudRadio from \"@/components/avue/crud-radio\";\n    import logLoginService from \"./log-login-service\";\n\n    export default {\n        name: \"table_sys_logLogin\",\n        components: {CrudSelect, CrudCheckbox, CrudRadio},\n        data() {\n            return {\n                searchFilterVisible: true,\n                list: null,\n                total: null,\n                listLoading: true,\n                searchLogLoginForm: {},\n                listQuery: {\n                    page: 1,\n                    size: 20\n                },\n                statusOptions: undefined,\n                delFlagOptions: undefined,\n                dialogStatus: 'create',\n                textMap: {\n                    update: '编辑登录日志',\n                    create: '创建登录日志'\n                },\n                tableKey: 0\n            };\n        },\n        computed: {\n            ...mapGetters([\"permissions\", \"dicts\"])\n        },\n        filters: {},\n        created() {\n            this.getList();\n            this.sys_logLogin_edit = this.permissions[\"sys_logLogin_edit\"];\n            this.sys_logLogin_del = this.permissions[\"sys_logLogin_del\"];\n            this.statusOptions = this.dicts[\"sys_status\"];\n            this.delFlagOptions = this.dicts[\"sys_flag\"];\n        },\n        methods: {\n            getList() {\n                this.listLoading = true;\n                this.listQuery.queryConditionJson = util.parseJsonItemForm([\n                    {\n                        fieldName: 'loginName',\n                        value: this.searchLogLoginForm.loginName,\n                        operate: 'like',\n                        attrType: 'String'\n                    },\n                    {\n                        fieldName: 'loginLocation',\n                        value: this.searchLogLoginForm.loginLocation,\n                        operate: 'like',\n                        attrType: 'String'\n                    },\n                ]);\n                logLoginService.page(this.listQuery).then(response => {\n                    this.list = response.data.records;\n                    this.total = response.data.total;\n                    this.listLoading = false;\n                });\n            },\n            sortChange(column) {\n                if (column.order == \"ascending\") {\n                    this.listQuery.ascs = column.prop;\n                    this.listQuery.descs = undefined;\n                } else {\n                    this.listQuery.descs = column.prop;\n                    this.listQuery.ascs = undefined;\n                }\n                this.getList()\n            },\n            searchReset() {\n                this.$refs['searchLogLoginForm'].resetFields();\n            },\n            handleFilter() {\n                this.listQuery.page = 1;\n                this.getList();\n            },\n            handleSizeChange(val) {\n                this.listQuery.size = val;\n                this.getList();\n            },\n            handleCurrentChange(val) {\n                this.listQuery.page = val;\n                this.getList();\n            },\n            handleDelete(row) {\n                this.$confirm(\n                    \"此操作将永久删除该登录日志, 是否继续?\",\n                    \"提示\",\n                    {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: \"warning\"\n                    }\n                ).then(() => {\n                    logLoginService.remove(row.id).then((data) => {\n                        this.getList();\n                    });\n                });\n            },\n        }\n    };\n</script>\n"],"sourceRoot":"src/views/sys/log-login"}]}