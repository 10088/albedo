management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ["configprops", "env", "health", "info", "threaddump", "logfile" ]
  endpoint:
    health:
      show-details: when_authorized
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    enabled: false # http://micrometer.io/ is disabled by default, as we use http://metrics.dropwizard.io/ instead


# 加解密根密码
jasypt:
  encryptor:
    password: albedo #根密码

spring:
  application:
    name: albedo-api
  session:
    store-type: redis
  profiles:
    active: ${mvn.spring.profiles.active}
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: ${application.mysql.driverClassName}
    username: ${application.mysql.username}
    password: ${application.mysql.password}
    url: ${application.mysql.url}
    dynamic:
      p6spy: ${application.database.p6spy}
      seata: ${application.database.isSeata}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

server:
  servlet:
    encoding:
      force: true
      charset: utf-8
# mybaits-plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/*/*Mapper.xml
  global-config:
    banner: false
    db-config:
      id-type: ASSIGN_UUID
      insert-strategy: NOT_NULL
      update-strategy: NOT_NULL
      table-underline: true
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
# ===================================================================
# Albedo specific properties
# ===================================================================

application:
  adminPath: /api
  version: @project.release.version@
  address-enabled: true
  logPath: logs
  static-file-directory:
    mac: ~/albedo/api-file
    linux: /home/albedo/api-file/
    win: C:\albedo\api-file\
  cors: #By default CORS are not enabled. Uncomment to enable.
    allowed-origins: "*"
    allowed-methods: "*"
    allowed-headers: "*"
    exposed-headers: "Authorization,Link,X-Total-Count"
    allow-credentials: true
    max-age: 1800
  http:
    version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
  database:
    tenantDatabasePrefix: albedo_base
    multiTenantType: DATASOURCE_COLUMN
    tenantIdColumn: tenant_code
    ignore-tables:
      - sys_tenant
    ignore-mapper-ids:
      - com.albedo.java.modules.gen.repository.TableRepository.findTableList
      - com.albedo.java.modules.gen.repository.TableRepository.findTableColumnList
      - com.albedo.java.modules.gen.repository.TableRepository.findTablePk
    isNotWrite: false
    p6spy: false
    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器
    isSeata: false
    id-type: HU_TOOL
    hutoolId:
      workerId: 0
      dataCenterId: 0
    cache-id:
      time-bits: 31
      worker-bits: 22
      seq-bits: 10
      epochStr: '2020-09-15'
      boost-power: 3
      padding-factor: 50
  file:
    storageType: LOCAL #  FAST_DFS LOCAL MIN_IO ALI_OSS HUAWEI_OSS QINIU_OSS
    delFile: false
    local:
      storage-path: /Users/somewhere/data/projects/uploadfile/file/     # 文件存储路径  （ 某些版本的 window 需要改成  D:\\data\\projects\\uploadfile\\file\\  ）
      endpoint: http://127.0.0.1/file/   # 文件访问 （部署nginx后，配置nginx的ip，并配置nginx静态代理storage-path地址的静态资源）
      inner-uri-prefix: null  #  内网的url前缀
    ali:
      # 请填写自己的阿里云存储配置
      uriPrefix: "http://albedo-admin-cloud.oss-cn-beijing.aliyuncs.com/"
      bucket-name: "albedo-admin-cloud"
      endpoint: "oss-cn-beijing.aliyuncs.com"
      access-key-id: "填写你的id"
      access-key-secret: "填写你的秘钥"
    minIo:
      endpoint: "http://127.0.0.1:9000/"
      accessKey: "aledo"
      secretKey: "aledo"
      bucket: "dev"
    huawei:
      uriPrefix: "dev.obs.cn-southwest-2.myhuaweicloud.com"
      endpoint: "obs.cn-southwest-2.myhuaweicloud.com"
      accessKey: "1"
      secretKey: "2"
      location: "cn-southwest-2"
      bucket: "dev"
    qiNiu:
      zone: "z0"
      accessKey: "1"
      secretKey: "2"
      bucket: "albedo_admin"
  security:
    # 前端密码密钥，必须16位
    encode-key: 'somewhere-albedo'
    remember-me:
      key: albedo-admin
    authorize:
      - ${application.adminPath}/**
    authorize-permit-all:
      - /management/health
      - /v2/api-docs/**
      - /swagger-resources/configuration/ui
      - /swagger-ui.html

